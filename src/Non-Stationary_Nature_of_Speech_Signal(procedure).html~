<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Virtual lab</title>
  <meta name="description" content="free website template" />
  <meta name="keywords" content="enter your keywords here" />
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=9" />
  <link rel="stylesheet" type="text/css" href="css/style.css" />
  <script type="text/javascript" src="js/jquery.min.js"></script>
  <script type="text/javascript" src="js/image_slide.js"></script>
</head>

<body>
<div id="main">
    <div id="header">
	  <div id="banner">
	    <div id="welcome">
	      <h1>Shakshat Virtual Lab <img src="images/iitg-logo1.jpg" style="width:125px;height:100px" align="right"/></h1> 
	    </div><!--close welcome-->
	    <div id="welcome_slogan">
	      <h1>INDIAN INSTITUTE OF TECHNOLOGY GUWAHATI</h1>
	    </div><!--close welcome_slogan-->
	  </div><!--close banner-->
    </div><!--close header-->

	<div id="menubar">
      <ul id="menu">
        <li><a href="index.html">Home</a></li>
        <li><a href="ourwork.html">About</a></li>
        <li><a href="projects.html">People</a></li>
        <li><a href="contact.html">Contact Us</a></li>
      </ul>
    </div><!--close menubar-->	
	<br />
	<br />
	<div id="menu_sub">Non-Stationary Nature of Speech Signal</div>
	<br />
	<div id="menubar1">
      <ul id="menu">
	 	<li><a href="Non-Stationary_Nature_of_Speech_Signal.html">Aim</a></li>
        <li><a href="Non-Stationary_Nature_of_Speech_Signal(theory).html">Theory</a></li>
        <li class="current"><a href="Non-Stationary_Nature_of_Speech_Signal(procedure).html">Procedure</a></li>
        <li><a href="Non-Stationary_Nature_of_Speech_Signal(quiz).html">Pre Quiz</a></li>
		<li><a href="Non-Stationary_Nature_of_Speech_Signal(simulation).html">Simulation</a></li>
        <li><a href="#">Post Quiz</a></li>
		<li><a href="Non-Stationary_Nature_of_Speech_Signal(assignment).html">Assignment</a></li>
		<li><a href="Non-Stationary_Nature_of_Speech_Signal(reference).html">Reference</a></li>
		<li><a href="Non-Stationary_Nature_of_Speech_Signal(video).html">Video</a></li>
		      </ul>
	  </br>
	  <div id="content_handaxe">
	  </br>
	  <br>
	 
	  <p><h1 style="color:#990000">Generation of singletone sine wave and its spectrum</h1></p>
	  <p style="font-size:16px; font-family:Verdana, Arial, Helvetica, sans-serif; text-align:justify;">&nbsp;&nbsp;&nbsp;The first step is to generate a singletone sine wave. A sine wave is characterized by its three parameters, namely, amplitude, frequency and phase. To study the concept of stationarity and non-stationarity, the frequency parameter is important and hence we consider maximum amplitude to be 1 and phase to be 0. On a digital machine the sine wave needs to be sampled for plotting or processing and the sampling frequency should be higher than the requirement of baseband sampling theorem. That is, sampling frequency should be more than twice the maximum frequency component for the case of sine wave. For smooth contour of sine wave, it is better to consider the sampling frequency to be much higher than the frequency of the sine wave. For instance, a 10 Hz sine wave sampled at 1000 Hz sampling frequency and for a duration of 1 sec can be generated in Scilab using the code given below.</p>
	  <p><img src="images/experiment1-procedure-code-fig1.jpg" /></p>
	  
	  <p style="font-size:16px; font-size:16px; font-family:Verdana, Arial, Helvetica, sans-serif; text-align:justify;">In the above code, we can generate different sine waves by changing the frequency value from 10 to the required values (of course up to about 250-300 Hz). A stationary signal which is non-sinusoidal in nature can also be generated using a suitable function in place of sine.

The spectrum of the 10 Hz sine wave generated can be computed using the fast Fourier transform (FFT) command available in the Scilab. The signal is for 1 sec duration and hence has 1000 samples. For efficient computation, the next higher binary power is chosen, that is, 1024 point FFT can be used. A Scilab code for computing the spectrum is given below. The spectrum will be shown only for half portion, since the magnitude spectrum is symmetric with respect to origin. A peak at 10 Hz indicates presence of 10 Hz component in the signal.
	  </p>
	  <p><img src="images/experiment1-procedure-code-fig2.jpg" width="650px" /></p>
	  <p><h2>Generation of multitone sine wave and its spectrum</h2></p>
	  <p>On the similar lines described for singletone sine wave, a multitone sine wave can be generated. The only difference is that the number of frequency components are more than one. For better visualization, the sampling frequency should be much higher than the highest frequency component. For instance, a multitone sine wave made of 10, 50 and 100 Hz frequency components can be generated using the Scilab code given below. The shape of the signal that will be generated is relatively more complicated compared to the single tone case. Hence it becomes difficult to find the frequency components by direct measurement in the time domain. However, the important point is, all the frequency components are present at all instants of time. Hence the multitone sine wave that will be generated by this program will also be a stationary signal.</p>
	  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src="images/experiment1-procedure-code-fig3.jpg" width="450px" /></p>
	  <p>To observe the different frequency components, the discrete Fourier transform (DFT) can be computed using FFT for the entire sequence. A Scilab code for the same is given below. On executing this program, a magnitude spectrum showing peaks at 10, 50 and 100 Hz will be generated.</p>
	  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src="images/experiment1-procedure-code-fig4.JPG" width="650px" /></p>
	  <p><h2>Generation of non-stationary multitone sine wave and its spectrum</h2></p>
	  <p style="font-size:16px">The next step is to generate a non-stationary signal. A simple way of generating such signal is to use different combinations of the single tone components available. A Scilab code to generate a non-stationary multitone sine wave made of different combinations of 10, 50 and 100 Hz components is given below. The shape of the waveform will be different in different regions indicating the change in frequency components.</p>
	  
	   <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src="images/experiment1-procedure-code-fig5.JPG"/></p>
	   <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The spectrum of the non-stationary signal will be meaningful if it is computed over regions that can be treated as stationary. For instance, in the above given code, the whole signal can be divided into four stationary regions and hence each region can be considered separately for computing the magnitude spectrum. A Scilab code to generate magnitude spectra of different stationary regions of the non-stationary signal generated above is given below.</p>
	   
	   <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src="images/experiment1-procedure-code-fig6.JPG" width="650px" /></p>
	   <p><h2>Limitation of Fourier Representation</h2></p>
	    <p style="font-size:16px">The last point to be understood as part of this experiment is the limitation of conventional Fourier representation in resolving the frequency components present in the non-stationary signal. For this a program can be written that takes the entire non-stationary signal once and computes the spectrum. A Scilab code to compute spectrum of the entire non-stationary signal made of 10, 50 and 100 Hz components is given below. The output of this program will indicate the different frequency components present in the signal, but not when. The crucial information in case of non-stationary signals is the timing information which will be missing altogether in case of conventional Fourier representation.</p>
		
      <p><img src="images/experiment1-procedure-code-fig9.JPG"  /></p>
	  <p style="font-size:16px">The same thing is true with respect to speech also. A Scilab code for computing magnitude spectrum of whole speech signal is given below.</p>
	  <p><img src="images/experiment1-procedure-code-fig10.jpg" style="margin-left:10%"/></p>
	   
	   
	  </div>
    </div><!--close menubar-->	
	 <div id="footer">
	  <a href="http://www.iitg.ernet.in">Copyright IIT GUWAHATI</a> | Developed By CSE DEPARTMENT 
  </div><!--close footer-->  
</body>
</html>
